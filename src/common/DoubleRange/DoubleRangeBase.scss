@import "../variables";
@import "../mixins";

/* focused */
.DoubleRange_focused {
  .DoubleRange-Gradient::after, .DoubleRange-Gradient:before {
    border-color: $inputBorderFocusColor !important;
  }
}


.DoubleRange {
  -webkit-tap-highlight-color: transparent;
  .DoubleRange-Container {
    position: relative;
    margin-top: 10px;
    height: $thumbHeight;
    overflow: hidden;
  }

  .DoubleRange-Label {
    color: #555;
    user-select: none;
    order: 0;
    padding-bottom: 5px;
    @include no-select;
  }

  .DoubleRange-Track {
    -webkit-appearance: none;
    -moz-appearance: none;
    width: 100%;
    left: 0;
    margin: 0;
    display: inline-block;
    position: absolute;
    height: $thumbHeight;
    background: transparent;
    order: 1;
    cursor: pointer;
    outline: none;
    @include input-range-track-common(moz ch) {
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 2px;
      background: transparent;
    }
    @include  input-range-track-common(ie) {
      height: 0;
      background-color: transparent;
    }
    @include input-range-thumb-common() {
      -webkit-appearance: none;
      -moz-appearance: none;
      height: 0;
      width: 0;
      visibility: hidden;
      background: transparent;
    }
  }
  .DoubleRange-Gradient {
    top: calc(50% - 1px);
    position: absolute;
    display: flex;
    box-sizing: border-box;
    width: 100%;
    height: $trackHeight;
    background-color: $trackBase;
    margin: auto;
    &::after {
      left:calc(100%);
      transform: translateX(-$thumbWidth * 2);
    }
  }
  .DoubleRange-Thumb {
    width: calc(100% - #{$thumbWidth});
    position: relative;
    top: calc(50%);
    display: flex;
    align-items: center;
      &:hover {
        cursor: ew-resize;
      }
      &:before {
        display: block;
        position: absolute;
        content: '';
        width: 100%;
        top: calc(50% - 1px);
        height: 2px;
        background-color: $trackBase;
      }
      &:after {
        content: '';
        display: block;
        position: absolute;
        transition: $inputTransition;
        box-sizing: border-box;
        width: $thumbWidth;
        border-radius: $thumbHeight;
        min-width: $thumbHeight;
        flex-basis: $trackHeight;
        height: $thumbHeight;
        background-color: $thumbColor;
        border: $inputBorder;
      }
  }
  .Thumb-Left {
    &:before {
      left: -100%;
    }

    transform: translateX(50%);
  }
  .Thumb-Right {
    &:before {
      left: $thumbWidth;
    }

    transform: translateX(79%);
  }
}